<?xml version="1.0" encoding="UTF-8"?>
<!--
    Inspired by https://github.com/eclipse-jkube/jkube/tree/master/quickstarts/maven/spring-boot, copyright notice follows:

    Copyright (c) 2019 Red Hat, Inc.
    This program and the accompanying materials are made
    available under the terms of the Eclipse Public License 2.0
    which is available at:

        https://www.eclipse.org/legal/epl-2.0/

    SPDX-License-Identifier: EPL-2.0

    Contributors:
      Red Hat, Inc. - initial API and implementation

-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.7.17</version>
  </parent>

  <groupId>org.eclipse.jkube.quickstarts.maven</groupId>
  <artifactId>spring-boot</artifactId>
  <version>1.17.0</version>
  <name>Eclipse JKube :: Quickstarts :: Maven :: Spring Boot Web</name>
  <packaging>jar</packaging>

  <description>
    Adapted from https://github.com/eclipse-jkube/jkube/tree/master/quickstarts/maven/spring-boot
    Spring Boot Web application with a single @RestController.
    Shows how to deploy Spring Boot applications to Kubernetes (-Pkubernetes) and OpenShift (-Popenshift) using Eclipse JKube.
  </description>

  <properties>
    <version.jkube>1.17.0</version.jkube>
    <version.arquillian_core>1.8.0.Final</version.arquillian_core>
    <version.arquillian_cube>${project.version}</version.arquillian_cube>
  </properties>

  <!-- Arquillian Cube integration -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <version>${version.arquillian_core}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.arquillian.cube</groupId>
        <artifactId>arquillian-cube-bom</artifactId>
        <version>${version.arquillian_cube}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>

    <!-- Boot generator  -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jolokia</groupId>
      <artifactId>jolokia-core</artifactId>
    </dependency>

    <!-- Arquillian Cube integration testing -->
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-standalone</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.arquillian.cube</groupId>
      <artifactId>arquillian-cube-openshift</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>io.undertow</groupId>
          <artifactId>undertow-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>


    </plugins>
  </build>

  <profiles>
    <profile>
      <id>kubernetes</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.eclipse.jkube</groupId>
            <artifactId>kubernetes-maven-plugin</artifactId>
            <version>${version.jkube}</version>

            <configuration>

              <resources>
                <labels>
                  <all>
                    <testProject>spring-boot-sample</testProject>
                  </all>
                </labels>
              </resources>

              <generator>
                <includes>
                  <include>spring-boot</include>
                </includes>
                <config>
                  <spring-boot>
                    <color>always</color>
                  </spring-boot>
                </config>
              </generator>
              <enricher>
                <excludes>
                  <exclude>jkube-expose</exclude>
                </excludes>
                <config>
                  <jkube-service>
                    <type>NodePort</type>
                  </jkube-service>
                </config>
              </enricher>
            </configuration>

            <executions>
              <execution>
                <goals>
                  <goal>resource</goal>
                  <goal>build</goal>
                  <goal>helm</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>openshift</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.eclipse.jkube</groupId>
            <artifactId>openshift-maven-plugin</artifactId>
            <version>${version.jkube}</version>

            <configuration>
              <resources>
                <labels>
                  <all>
                    <testProject>spring-boot-sample</testProject>
                  </all>
                </labels>
              </resources>

              <generator>
                <includes>
                  <include>spring-boot</include>
                </includes>
                <config>
                  <spring-boot>
                    <color>always</color>
                  </spring-boot>
                </config>
              </generator>
              <enricher>
                <excludes>
                  <exclude>jkube-expose</exclude>
                </excludes>
                <config>
                  <jkube-service>
                    <type>NodePort</type>
                  </jkube-service>
                </config>
              </enricher>
            </configuration>

            <executions>
              <execution>
                <goals>
                  <goal>resource</goal>
                  <goal>build</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
