sudo: required

matrix:
  include:
     - env: OC_CLUSTER_UP=true OC_VERSION="v3.6.0" COMMIT_ID="c4dd4cf" CATEGORY="org.arquillian.cube.kubernetes.impl.requirement.RequiresKubernetes,org.arquillian.cube.openshift.impl.requirement.RequiresOpenshift"
     - env: OC_CLUSTER_UP=true OC_VERSION="v3.6.1" COMMIT_ID="008f2d5" CATEGORY="org.arquillian.cube.kubernetes.impl.requirement.RequiresKubernetes,org.arquillian.cube.openshift.impl.requirement.RequiresOpenshift"
     - env: OC_CLUSTER_UP=true OC_VERSION="v3.7.0" COMMIT_ID="7ed6862" CATEGORY="org.arquillian.cube.kubernetes.impl.requirement.RequiresKubernetes,org.arquillian.cube.openshift.impl.requirement.RequiresOpenshift"
     - env: OC_CLUSTER_UP=true OC_VERSION="v3.7.1" COMMIT_ID="ab0f056" CATEGORY="org.arquillian.cube.kubernetes.impl.requirement.RequiresKubernetes,org.arquillian.cube.openshift.impl.requirement.RequiresOpenshift"
     - env: CATEGORY="org.arquillian.cube.docker.impl.requirement.RequiresDocker"

services:
  - docker
addons:
   apt:
     sources:
       - git-core
     packages:
       - git

language: java
jdk:
  - oraclejdk8
cache:
  directories:
    - $HOME/.m2

before_install:
  - BRANCH=${TRAVIS_PULL_REQUEST_BRANCH:-$TRAVIS_BRANCH}
  - '[ $(git log --format=%B  $TRAVIS_COMMIT_RANGE | grep -i "#doc" | wc -l) -gt 0 ] && FORCE_DOC_GEN=0 || FORCE_DOC_GEN=1'
  - MODIFIED_DOCS=$(git diff --name-only $TRAVIS_COMMIT_RANGE | grep -E 'README.adoc|^docs/.*.adoc$' | wc -l)
  - '[ $BRANCH == "master" ] && [ $MODIFIED_DOCS -ge 1 ] && GENERATE_DOC=0 || GENERATE_DOC=1'
  - 'if [ $FORCE_DOC_GEN == 0 ] || [ $GENERATE_DOC == 0 ]; then
      git config user.name "${GH_USER}";
      git config user.email "${GH_EMAIL}";
      git config remote.origin.fetch +refs/heads/*:refs/remotes/origin/*;
      git fetch --unshallow origin gh-pages;
      git worktree add -b gh-pages gh-pages origin/gh-pages;
      GH_REF=$(git remote get-url origin | awk "{sub(/https:\/\//,\"https://${GH_TOKEN}@\")}; 1" | awk "{sub(/\.git/, \"\")} 1");
      docker pull rochdev/alpine-asciidoctor:mini;
    fi'

install:
  - |
      # OpenShift >= 3.7 requires nsenter https://github.com/openshift/origin/issues/17638
      if [ ${OC_VERSION} == "v3.7.1" ] || [ ${OC_VERSION} == "v3.7.0" ] ; then
        sudo chmod +x nsetter_and_systemd_run_setup.sh
        ./nsetter_and_systemd_run_setup.sh
      fi
      if [ ${OC_CLUSTER_UP} ]; then
        tmp=`mktemp`
        echo 'DOCKER_OPTS="$DOCKER_OPTS --insecure-registry 172.30.0.0/16"' > ${tmp}
        sudo mv ${tmp} /etc/default/docker
        sudo mount --make-shared /
        sudo service docker restart
        docker pull openshift/wildfly-101-centos7
        docker pull aslakknutsen/openshift-arquillian-gitserver
        curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && \
            chmod +x kubectl && sudo mv kubectl /usr/local/bin/
        client_tools="openshift-origin-client-tools-${OC_VERSION}-${COMMIT_ID}-linux-64bit" && curl -LO https://github.com/openshift/origin/releases/download/${OC_VERSION}/${client_tools}.tar.gz && \
          tar -xvzf ${client_tools}.tar.gz && sudo mv $PWD/${client_tools}/oc /usr/local/bin/ && rm -rf ${client_tools}.tar.gz
        oc cluster up --version=${OC_VERSION} --routing-suffix="127.0.0.1.${OC_DOMAIN:-nip.io}"
        sleep 10
        oc login -u system:admin
        oc get all -n default
      fi

before_script: ./mvnw install -q -U -DskipTests=true

script:
  - ./mvnw clean verify -Dfailsafe.groups=${CATEGORY}
  - 'if [ $FORCE_DOC_GEN == 0 ] || [ $GENERATE_DOC == 0 ]; then
      docker run -v $TRAVIS_BUILD_DIR:/docs/ --name adoc-to-html rochdev/alpine-asciidoctor:mini asciidoctor /docs/README.adoc -a generated-doc=true -a asciidoctor-source=/docs/docs -o /docs/gh-pages/index.html;
    fi'

after_success:
  - 'if [ $FORCE_DOC_GEN == 0 ] || [ $GENERATE_DOC == 0 ]; then
      cd gh-pages;
      git add .;
      git commit -m"Publishes new documentation";
      git push --quiet "${GH_REF}" gh-pages > /dev/null 2>&1;
    fi'

after_error:
  - 'if [ $FORCE_DOC_GEN == 0 ] || [ $GENERATE_DOC == 0 ]; then
      docker logs adoc-to-html;
    fi'

after_failure:
  - 'if [ $FORCE_DOC_GEN == 0 ] || [ $GENERATE_DOC == 0 ]; then
      docker logs adoc-to-html;
    fi'
  - |
      if [ ${OC_CLUSTER_UP} ]; then
        oc project default
        oc get event -w
      fi
